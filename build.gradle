group 'de.ellpeck.rockbottom'
version '0.0.26'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'

mainClassName = "de.ellpeck.rockbottom.Main"

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    proguardEnabled = new File(gradle.proguardDir).exists()
}

buildscript {
    ext {
        proguardEnabled = new File(gradle.proguardDir).exists()
    }

    repositories {
        jcenter()
        if (proguardEnabled)
            flatDir dirs: gradle.proguardDir
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.0'
        if (proguardEnabled)
            classpath ':proguard:'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile project(":API")
    compile group: 'org.slick2d', name: 'slick2d-core', version: '1.0.2'
    compile group: 'io.netty', name: 'netty-all', version: '4.1.11.Final'
    compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '4.9'
    compile group: 'com.google.guava', name: 'guava', version: '22.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.1'
}

jar {
    manifest {
        attributes("Main-Class": "de.ellpeck.rockbottom.Main")
    }
}

installDist {
    destinationDir = new File('build/temp/libs')
    exclude 'RockBottom-*'
}

if (proguardEnabled) {
    task myProguardTask(type: proguard.gradle.ProGuardTask) {
        configuration 'settings.pro'

        injars 'build/libs'
        outjars 'build/obf/Obf.jar'
    }
    myProguardTask.dependsOn(installDist)

    task deleteFiles(type: Delete) {
        delete 'build/libs/'
        delete 'build/classes/'
    }
    deleteFiles.dependsOn myProguardTask

    shadowJar {
        from file("${buildDir}/obf")
        from file("${buildDir}/temp/libs/lib")
        dependencies {
            exclude(dependency('org.lwjgl.lwjgl:lwjgl-platform::'))
            exclude(dependency('net.java.jinput:jinput-platform::'))
        }
    }.dependsOn.clear()
    shadowJar.dependsOn(deleteFiles)

    task buildObf {

    }
    buildObf.dependsOn build
    buildObf.dependsOn installDist
}
