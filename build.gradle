group 'de.ellpeck.rockbottom'
version '0.2.3.1'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'

mainClassName = "de.ellpeck.rockbottom.Main"

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    proguardEnabled = new File(gradle.proguardDir).exists()
}

buildscript {
    ext {
        proguardEnabled = new File(gradle.proguardDir).exists()
    }

    repositories {
        jcenter()
        if (proguardEnabled)
            flatDir dirs: gradle.proguardDir
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.0'
        if (proguardEnabled)
            classpath ':proguard:'
    }
}

repositories {
    mavenCentral()

    maven {
        url "http://clojars.org/repo/"
    }
}

dependencies {
    compile project(":API")
    compile project(":Assets")
}

jar {
    manifest {
        attributes("Main-Class": "de.ellpeck.rockbottom.Main")
    }
}

installDist {
    destinationDir = new File('build/temp/libs')
    exclude 'RockBottom-*'
}

if (proguardEnabled) {
    task myProguardTask(type: proguard.gradle.ProGuardTask) {
        configuration 'settings.pro'

        injars 'build/libs'
        outjars 'build/obf/Obf.jar'
    }
    myProguardTask.dependsOn(installDist)

    task deleteFiles(type: Delete) {
        delete 'build/libs/'
        delete 'build/classes/'
    }
    deleteFiles.dependsOn myProguardTask

    shadowJar {
        from file("${buildDir}/obf")
        from file("${buildDir}/temp/libs/lib")
    }.dependsOn.clear()
    shadowJar.dependsOn(deleteFiles)

    task buildObf {

    }
    buildObf.dependsOn build
    buildObf.dependsOn installDist
}
